name: Release

on:
  release: 
    types: published

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
    test-build-release:
        runs-on: ubuntu-latest
        permissions:
          contents: read
          packages: write
        steps:
            # Setup
            - uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - uses: actions/setup-node@v2.1.4
              with:
                node-version: 20
            
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Setup yarn cache
              uses: actions/cache@v2
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            
            - name: Add node-gyp
              run: yarn global add node-gyp

            - name: Install modules
              run: yarn --prefer-offline --frozen-lockfile

            # Test
            - name: Run tests
              run: yarn test

            # Build docker image, push to GitHub Packages
            - name: Log in to the Container registry
              uses: docker/login-action@v3.0.0
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.4.0
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                tags: |
                  type=ref,event=tag
                  type=sha

            - name: Build and push Docker image
              uses: docker/build-push-action@v5.1.0
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
            